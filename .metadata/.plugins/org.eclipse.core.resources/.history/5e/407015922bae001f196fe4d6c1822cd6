package com.zzt.client.core;

import java.util.HashSet;
import java.util.Set;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.atomic.AtomicInteger;

import io.netty.channel.ChannelFuture;

public class ChannelManager {

	static Set<String> realServerPath = new HashSet<String>();
	public static AtomicInteger  position = new AtomicInteger(0);
	public static CopyOnWriteArrayList<ChannelFuture> channelFutures = new CopyOnWriteArrayList<>();

	public static void removeChannel(ChannelFuture channel) {
	    channelFutures.remove(channel);
	}

	public static void addChannel(ChannelFuture channel) {
	    channelFutures.add(channel);
	}

	public static void clear() {
	    channelFutures.clear();
	}

	public static ChannelFuture get(AtomicInteger i) {
		

		ChannelFuture channelFuture = null;
		int size = channelFutures.size();
		if(i.get()>=size){
			channelFuture = channelFutures.get(0);
			ChannelManager.position= new AtomicInteger(1);
		}
		else{
			channelFuture = channelFutures.get(i.getAndIncrement());
		}
		return channelFuture;
	}
}
